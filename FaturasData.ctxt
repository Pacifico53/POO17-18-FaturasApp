#BlueJ class context
comment0.target=FaturasData
comment0.text=\n\ Aqui\ se\ encontram\ as\ estruturas\ utilizadas\ no\ programa\n\n\ \n
comment1.params=
comment1.target=FaturasData()
comment1.text=\n\ Constructor\ que\ inicializa\ a\ estrutura\n
comment10.params=nif\ password
comment10.target=void\ iniciaSessao(int,\ java.lang.String)
comment10.text=\ \n\ Metodo\ em\ que\ um\ utilizador\ (individual\ ou\ empresa)\ faz\ login\ no\ programa\n
comment11.params=
comment11.target=boolean\ checkAccount()
comment11.text=\ \n\ Verifica\ se\ alguma\ conta\ esta\ logged\ in.\n
comment12.params=
comment12.target=boolean\ checkEmpresa()
comment12.text=\ \n\ Verifica\ se\ a\ conta\ que\ esta\ logged\ in\ \u00E9\ um\ contribuinte\ empresa.\n
comment13.params=
comment13.target=boolean\ checkIndividual()
comment13.text=\ \n\ Verifica\ se\ a\ conta\ que\ esta\ logged\ in\ \u00E9\ um\ contribuinte\ individual.\n
comment14.params=
comment14.target=boolean\ checkAdmin()
comment14.text=\ \n\ Verifica\ se\ a\ conta\ que\ esta\ logged\ in\ \u00E9\ o\ administrador.\n
comment15.params=
comment15.target=java.lang.String\ getNameEmpresa()
comment15.text=\ \n\ Retorna\ o\ nome\ da\ Empresa\ que\ est\u00E1\ logged\ in\ no\ Sistema.\n
comment16.params=
comment16.target=java.lang.String\ getNameIndividual()
comment16.text=\ \n\ Retorna\ o\ nome\ do\ Contribuinte\ Individual\ que\ est\u00E1\ logged\ in\ no\ Sistema.\n
comment17.params=
comment17.target=void\ logOut()
comment17.text=\ \n\ Metodo\ para\ fazer\ log\ out\ do\ sistema.\n
comment18.params=file
comment18.target=void\ gravarState(java.lang.String)
comment18.text=\ \n\ Metodo\ que\ guarda\ o\ estado\ do\ sistema\n
comment19.params=file
comment19.target=FaturasData\ leObj(java.lang.String)
comment19.text=\ \n\ Metodo\ que\ altera\ o\ estado\ do\ sistema,\ no\ ficheiro\n
comment2.params=
comment2.target=java.util.HashMap\ getHashEmpresas()
comment2.text=\n\ Get\ da\ HashMap\ das\ Empresas\n
comment20.params=file\ ap
comment20.target=void\ log(java.lang.String,\ boolean)
comment20.text=\ \n\ Metodo\ que\ escreve\ em\ log.txt\ todas\ as\ altera\u00E7oes\ ao\ estado\ do\ programa\ desde\ que\ ele\ \u00E9\ iniciado.\n\ Por\ exemplo\ se\ registarmos\ uma\ fatura\ no\ programa.\n\ Este\ metodo\ mostra\ a\ estrutura\ toda.\n
comment3.params=
comment3.target=java.util.HashMap\ getHashIndividuais()
comment3.text=\n\ Get\ da\ HashMap\ dos\ contribuintes\ individuais\n
comment4.params=
comment4.target=java.util.ArrayList\ getListaDespesas()
comment4.text=\n\ Get\ da\ ArrayList\ das\ despesas\n
comment5.params=
comment5.target=Empresas\ getEmpresa()
comment5.text=\n\ Get\ da\ Empresa\ logged\ in\ no\ momento\n
comment6.params=
comment6.target=ContribuinteIndividual\ getContrIndividual()
comment6.text=\n\ Get\ do\ contribuinte\ individual\ logged\ in\ no\ momento\n
comment7.params=emp
comment7.target=void\ addEmpresa(Empresas)
comment7.text=\n\ Inserir\ uma\ Empresa\ nova\ na\ HashMap\n
comment8.params=contr
comment8.target=void\ addIndividual(ContribuinteIndividual)
comment8.text=\n\ Inserir\ um\ Contribuinte\ individual\ novo\ na\ HashMap\n
comment9.params=desp
comment9.target=void\ addDespesa(Despesa)
comment9.text=\n\ Inserir\ uma\ Despesa\ na\ ArrayList\n
numComments=21
