#BlueJ class context
comment0.target=Empresas
comment0.text=\n\ Classe\ das\ empresas\ (sub\ classe\ de\ contribuinte)\n\n\ \n
comment1.params=
comment1.target=Empresas()
comment1.text=\n\ Construtor\ vazio\n
comment10.params=
comment10.target=java.lang.String\ toString()
comment10.text=\n\ Fun\u00E7ao\ para\ representar\ uma\ contribuinte\ empresarial\ numa\ String\n
comment2.params=newNIF\ newEmail\ newNome\ newMorada\ newPassword\ activEconomicas\ fatorDeduc
comment2.target=Empresas(int,\ java.lang.String,\ java.lang.String,\ java.lang.String,\ java.lang.String,\ java.util.ArrayList,\ double)
comment2.text=\n\ Construtor\ parameterizado\n
comment3.params=c
comment3.target=Empresas(Empresas)
comment3.text=\n\ Construtor\ de\ copia\n
comment4.params=
comment4.target=java.util.ArrayList\ getActividadesEconomicas()
comment4.text=\n\ Get\ das\ atividades\ economicas\ de\ um\ contribuinte\ empresarial\n
comment5.params=newActividadesEconomicas
comment5.target=void\ setActividadesEconomicas(java.util.ArrayList)
comment5.text=\n\ Set\ das\ atividades\ economicas\ de\ um\ contribuinte\ empresarial\n
comment6.params=
comment6.target=double\ getFatorDeducao()
comment6.text=\n\ Get\ do\ fator\ de\ dedu\u00E7ao\ de\ um\ contribuinte\ empresarial\n
comment7.params=newFatorDeducao
comment7.target=void\ setFatorDeducao(double)
comment7.text=\n\ Set\ do\ fator\ de\ dedu\u00E7ao\ de\ um\ contribuinte\ empresarial\n
comment8.params=l
comment8.target=boolean\ equals(java.lang.Object)
comment8.text=\n\ Funcao\ equals\ para\ comparar\ dois\ contribuintes\ empresariais\n
comment9.params=
comment9.target=Empresas\ clone()
comment9.text=\n\ Funcao\ para\ clonar\ um\ contribuinte\ empresarial\n
numComments=11
